1. Us√° path.extname() para obtener la extensi√≥n.

2. Definir patrones de comentarios
Pens√° en una estructura para guardar los s√≠mbolos de comentario por lenguaje.

3. Leer el archivo l√≠nea por l√≠nea
üõ† Herramientas:
fs.readFileSync() + split('\n')
o si quer√©s hacerlo m√°s pro:
Us√° readline para leer l√≠nea por l√≠nea sin cargar todo el archivo.

4. Detectar l√≠neas de comentarios
Seg√∫n el patr√≥n que obtuviste en el paso 2:
Para comentarios de una l√≠nea:
Verific√° si la l√≠nea empieza con el s√≠mbolo (usando trim().startsWith())
Para multil√≠nea:
Us√° una bandera (ej: inMultiLine = true)
Cuando veas el multiStart, activala.
Cuando veas el multiEnd, desactivala.
Mientras inMultiLine sea true, consider√° todo como comentario.

5. Mostrar o contar
Ya con los comentarios detectados, pod√©s:
Listarlos uno a uno (console.log por l√≠nea)
O contarlos y agregarlos como m√©trica

BONUS TIP: 
‚ö†Ô∏è Ten√© cuidado con l√≠neas que tienen c√≥digo + comentario (ej: const x = 5; // comentario)
üìè Pod√©s usar expresiones regulares si quer√©s detectar cosas m√°s avanzadas
üåà Agreg√° colores con chalk para mejorar la experiencia visual